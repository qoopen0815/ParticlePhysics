{
  "api/ParticlePhysics.Enum.html": {
    "href": "api/ParticlePhysics.Enum.html",
    "title": "Namespace ParticlePhysics.Enum | Particle Physics",
    "keywords": "Namespace ParticlePhysics.Enum Enums ParticleNum ParticleType"
  },
  "api/ParticlePhysics.Enum.ParticleNum.html": {
    "href": "api/ParticlePhysics.Enum.ParticleNum.html",
    "title": "Enum ParticleNum | Particle Physics",
    "keywords": "Enum ParticleNum Namespace : ParticlePhysics.Enum Assembly : cs.temp.dll.dll Syntax public enum ParticleNum Fields Name Description NUM_128K NUM_16K NUM_256K NUM_32K NUM_64K NUM_8K"
  },
  "api/ParticlePhysics.Enum.ParticleType.html": {
    "href": "api/ParticlePhysics.Enum.ParticleType.html",
    "title": "Enum ParticleType | Particle Physics",
    "keywords": "Enum ParticleType Namespace : ParticlePhysics.Enum Assembly : cs.temp.dll.dll Syntax public enum ParticleType Fields Name Description Cube Simple Tetrahedron"
  },
  "api/ParticlePhysics.html": {
    "href": "api/ParticlePhysics.html",
    "title": "Namespace ParticlePhysics | Particle Physics",
    "keywords": "Namespace ParticlePhysics Classes ParticleBuffer Represents a buffer to hold particle data for particle-based physics simulations. TerrainBuffer Structs ParticleElement ParticleState TerrainType"
  },
  "api/ParticlePhysics.ParticleBuffer.html": {
    "href": "api/ParticlePhysics.ParticleBuffer.html",
    "title": "Class ParticleBuffer | Particle Physics",
    "keywords": "Class ParticleBuffer Represents a buffer to hold particle data for particle-based physics simulations. Inheritance Object ParticleBuffer Namespace : ParticlePhysics Assembly : cs.temp.dll.dll Syntax public class ParticleBuffer Constructors ParticleBuffer(Int32) Initializes a new instance of the ParticleBuffer class with the specified number of particles. Declaration public ParticleBuffer(int particleNum) Parameters Type Name Description Int32 particleNum Fields num The number of particles in the buffer. Declaration public readonly int num Field Value Type Description Int32 status The graphics buffer to store particle state data. Declaration public GraphicsBuffer status Field Value Type Description GraphicsBuffer substance The substance associated with the particles. Declaration public ParticleSubstance substance Field Value Type Description ParticleSubstance Methods Release() Releases the resources held by the particle buffer. Declaration public void Release() SetAsCubeParticle(ParticleState[], Single, Single, Single) Creates a new ParticleBuffer and sets it up as cube particles with the given parameters. Declaration public static ParticleBuffer SetAsCubeParticle(ParticleState[] particles, float radius = 0.04F, float density = 2000F, float mu = 0.05F) Parameters Type Name Description ParticleState [] particles An array of particle states. Single radius The radius of the particles. (Optional) Single density The density of the particles. (Optional) Single mu The friction coefficient of the particles. (Optional) Returns Type Description ParticleBuffer The created particle buffer. SetAsSimpleParticle(ParticleState[], Single, Single, Single) Creates a new ParticleBuffer and sets it up as simple particles with the given parameters. Declaration public static ParticleBuffer SetAsSimpleParticle(ParticleState[] particles, float radius = 0.04F, float density = 2000F, float mu = 0.05F) Parameters Type Name Description ParticleState [] particles An array of particle states. Single radius The radius of the particles. (Optional) Single density The density of the particles. (Optional) Single mu The friction coefficient of the particles. (Optional) Returns Type Description ParticleBuffer The created particle buffer. SetAsTetrahedronParticle(ParticleState[], Single, Single, Single) Creates a new ParticleBuffer and sets it up as tetrahedron particles with the given parameters. Declaration public static ParticleBuffer SetAsTetrahedronParticle(ParticleState[] particles, float radius = 0.04F, float density = 2000F, float mu = 0.05F) Parameters Type Name Description ParticleState [] particles An array of particle states. Single radius The radius of the particles. (Optional) Single density The density of the particles. (Optional) Single mu The friction coefficient of the particles. (Optional) Returns Type Description ParticleBuffer The created particle buffer."
  },
  "api/ParticlePhysics.ParticleElement.html": {
    "href": "api/ParticlePhysics.ParticleElement.html",
    "title": "Struct ParticleElement | Particle Physics",
    "keywords": "Struct ParticleElement Namespace : ParticlePhysics Assembly : cs.temp.dll.dll Syntax public struct ParticleElement Constructors ParticleElement(Single, Single, Vector3) Declaration public ParticleElement(float radius, float mass, Vector3 offsetFromParticleCenter) Parameters Type Name Description Single radius Single mass Vector3 offsetFromParticleCenter Fields mass Declaration public float mass Field Value Type Description Single offsetFromParticleCenter Declaration public Vector3 offsetFromParticleCenter Field Value Type Description Vector3 radius Declaration public float radius Field Value Type Description Single"
  },
  "api/ParticlePhysics.ParticleState.html": {
    "href": "api/ParticlePhysics.ParticleState.html",
    "title": "Struct ParticleState | Particle Physics",
    "keywords": "Struct ParticleState Namespace : ParticlePhysics Assembly : cs.temp.dll.dll Syntax public struct ParticleState Fields angularVelocity Declaration public Vector3 angularVelocity Field Value Type Description Vector3 isActive Declaration public uint isActive Field Value Type Description UInt32 orientation Declaration public Vector4 orientation Field Value Type Description Vector4 position Declaration public Vector3 position Field Value Type Description Vector3 velocity Declaration public Vector3 velocity Field Value Type Description Vector3 Methods GenerateCube(Int32, Vector3, Single) Declaration public static ParticleState[] GenerateCube(int particleNum, Vector3 centerPos, float size) Parameters Type Name Description Int32 particleNum Vector3 centerPos Single size Returns Type Description ParticleState [] GenerateFromGameObject(GameObject) Declaration public static ParticleState[] GenerateFromGameObject(GameObject obj) Parameters Type Name Description GameObject obj Returns Type Description ParticleState [] GenerateFromMesh(Mesh) Declaration public static ParticleState[] GenerateFromMesh(Mesh mesh) Parameters Type Name Description Mesh mesh Returns Type Description ParticleState [] GeneratePoint(Int32, Vector3) Declaration public static ParticleState[] GeneratePoint(int particleNum, Vector3 centerPos) Parameters Type Name Description Int32 particleNum Vector3 centerPos Returns Type Description ParticleState [] GenerateSphere(Int32, Vector3, Single) Declaration public static ParticleState[] GenerateSphere(int particleNum, Vector3 centerPos, float radius) Parameters Type Name Description Int32 particleNum Vector3 centerPos Single radius Returns Type Description ParticleState []"
  },
  "api/ParticlePhysics.Solver.html": {
    "href": "api/ParticlePhysics.Solver.html",
    "title": "Namespace ParticlePhysics.Solver | Particle Physics",
    "keywords": "Namespace ParticlePhysics.Solver Classes SandPhysicsSolver This class simulates particle behaviour based on the MolecularDynamics method. Structs ObjectCollisionForce ParticleCollisionForce TerrainCollisionForce"
  },
  "api/ParticlePhysics.Solver.ObjectCollisionForce.html": {
    "href": "api/ParticlePhysics.Solver.ObjectCollisionForce.html",
    "title": "Struct ObjectCollisionForce | Particle Physics",
    "keywords": "Struct ObjectCollisionForce Namespace : ParticlePhysics.Solver Assembly : cs.temp.dll.dll Syntax public struct ObjectCollisionForce Constructors ObjectCollisionForce(Vector3, Vector3) Declaration public ObjectCollisionForce(Vector3 force, Vector3 torque) Parameters Type Name Description Vector3 force Vector3 torque Fields force Declaration public Vector3 force Field Value Type Description Vector3 torque Declaration public Vector3 torque Field Value Type Description Vector3 Methods Zero() Declaration public static ObjectCollisionForce Zero() Returns Type Description ObjectCollisionForce"
  },
  "api/ParticlePhysics.Solver.ParticleCollisionForce.html": {
    "href": "api/ParticlePhysics.Solver.ParticleCollisionForce.html",
    "title": "Struct ParticleCollisionForce | Particle Physics",
    "keywords": "Struct ParticleCollisionForce Namespace : ParticlePhysics.Solver Assembly : cs.temp.dll.dll Syntax public struct ParticleCollisionForce Constructors ParticleCollisionForce(Vector3, Vector3) Declaration public ParticleCollisionForce(Vector3 force, Vector3 torque) Parameters Type Name Description Vector3 force Vector3 torque Fields force Declaration public Vector3 force Field Value Type Description Vector3 torque Declaration public Vector3 torque Field Value Type Description Vector3 Methods Zero() Declaration public static ParticleCollisionForce Zero() Returns Type Description ParticleCollisionForce"
  },
  "api/ParticlePhysics.Solver.SandPhysicsSolver.html": {
    "href": "api/ParticlePhysics.Solver.SandPhysicsSolver.html",
    "title": "Class SandPhysicsSolver | Particle Physics",
    "keywords": "Class SandPhysicsSolver This class simulates particle behaviour based on the MolecularDynamics method. Inheritance Object SandPhysicsSolver Namespace : ParticlePhysics.Solver Assembly : cs.temp.dll.dll Syntax public class SandPhysicsSolver Constructors SandPhysicsSolver(Vector3, Single) Note: Please call SetMainParticle(), SetCollisionObjects() and SetTerrain() to register the required data before execution. Declaration public SandPhysicsSolver(Vector3 gravity, float maxAllowableTimestep = 0.005F) Parameters Type Name Description Vector3 gravity Single maxAllowableTimestep Fields _debugger Declaration public GraphicsBuffer _debugger Field Value Type Description GraphicsBuffer gravity Declaration public readonly Vector3 gravity Field Value Type Description Vector3 gridCellSize Declaration public static float gridCellSize Field Value Type Description Single gridSize Declaration public static Vector3 gridSize Field Value Type Description Vector3 maxAllowableTimestep Declaration public readonly float maxAllowableTimestep Field Value Type Description Single Properties ObjectCollisionForce Declaration public ObjectCollisionForce[] ObjectCollisionForce { get; } Property Value Type Description ObjectCollisionForce [] ParticleCollisionForce Declaration public ParticleCollisionForce[] ParticleCollisionForce { get; } Property Value Type Description ParticleCollisionForce [] RegisteredCollisionObjectArray Declaration public GameObject[] RegisteredCollisionObjectArray { get; } Property Value Type Description GameObject [] RegisteredCollisionObjectList Declaration public List<GameObject> RegisteredCollisionObjectList { get; } Property Value Type Description List < GameObject > RegisteredParticles Declaration public ParticleBuffer RegisteredParticles { get; } Property Value Type Description ParticleBuffer TerrainCollisionForce Declaration public TerrainCollisionForce[] TerrainCollisionForce { get; } Property Value Type Description TerrainCollisionForce [] Methods Release() Must be called at the end of execution. Declaration public void Release() SetCollisionObjects(GameObject[]) Declaration public void SetCollisionObjects(GameObject[] objects) Parameters Type Name Description GameObject [] objects SetFieldTerrain(Terrain, Vector3) Declaration public void SetFieldTerrain(Terrain terrain, Vector3 gridCenter) Parameters Type Name Description Terrain terrain Vector3 gridCenter SetMainParticle(ParticleBuffer) Declaration public void SetMainParticle(ParticleBuffer particle = null) Parameters Type Name Description ParticleBuffer particle UpdateParticle(ref ParticleBuffer, GraphicsBuffer) Declaration public void UpdateParticle(ref ParticleBuffer particles, GraphicsBuffer terrain) Parameters Type Name Description ParticleBuffer particles GraphicsBuffer terrain"
  },
  "api/ParticlePhysics.Solver.TerrainCollisionForce.html": {
    "href": "api/ParticlePhysics.Solver.TerrainCollisionForce.html",
    "title": "Struct TerrainCollisionForce | Particle Physics",
    "keywords": "Struct TerrainCollisionForce Namespace : ParticlePhysics.Solver Assembly : cs.temp.dll.dll Syntax public struct TerrainCollisionForce Constructors TerrainCollisionForce(Vector3, Vector3) Declaration public TerrainCollisionForce(Vector3 force, Vector3 torque) Parameters Type Name Description Vector3 force Vector3 torque Fields force Declaration public Vector3 force Field Value Type Description Vector3 torque Declaration public Vector3 torque Field Value Type Description Vector3 Methods Zero() Declaration public static TerrainCollisionForce Zero() Returns Type Description TerrainCollisionForce"
  },
  "api/ParticlePhysics.Substance.CubeSubstance.html": {
    "href": "api/ParticlePhysics.Substance.CubeSubstance.html",
    "title": "Class CubeSubstance | Particle Physics",
    "keywords": "Class CubeSubstance Inheritance Object ParticleSubstance CubeSubstance Inherited Members ParticleSubstance.elements ParticleSubstance.mu ParticleSubstance.totalMass ParticleSubstance.centerOfMass ParticleSubstance.inertialMoment ParticleSubstance.Elements ParticleSubstance.TotalMass ParticleSubstance.Mu ParticleSubstance.CenterOfMass ParticleSubstance.InertialMoment ParticleSubstance.InertialMoment4x4 ParticleSubstance.Release() ParticleSubstance.CalculateElementMass(Single, Single) ParticleSubstance.CalculateInverseInertialMoment(ParticleElement[]) ParticleSubstance.CalculateTotalMass(ParticleElement[], Single) ParticleSubstance.CalculateCenterOfMass(ParticleElement[]) Namespace : ParticlePhysics.Substance Assembly : cs.temp.dll.dll Syntax public class CubeSubstance : ParticleSubstance Constructors CubeSubstance(Single, Single, Single) Declaration public CubeSubstance(float radius = 0.04F, float density = 2000F, float mu = 0.05F) Parameters Type Name Description Single radius Single density Single mu Methods SetElements(Single, Single) Declaration protected override ParticleElement[] SetElements(float particleRadius, float particleDensity) Parameters Type Name Description Single particleRadius Single particleDensity Returns Type Description ParticleElement [] Overrides ParticleSubstance.SetElements(Single, Single)"
  },
  "api/ParticlePhysics.Substance.html": {
    "href": "api/ParticlePhysics.Substance.html",
    "title": "Namespace ParticlePhysics.Substance | Particle Physics",
    "keywords": "Namespace ParticlePhysics.Substance Classes CubeSubstance ParticleSubstance SimpleSubstance TetrahedronSubstance"
  },
  "api/ParticlePhysics.Substance.ParticleSubstance.html": {
    "href": "api/ParticlePhysics.Substance.ParticleSubstance.html",
    "title": "Class ParticleSubstance | Particle Physics",
    "keywords": "Class ParticleSubstance Inheritance Object ParticleSubstance CubeSubstance SimpleSubstance TetrahedronSubstance Namespace : ParticlePhysics.Substance Assembly : cs.temp.dll.dll Syntax public abstract class ParticleSubstance Fields centerOfMass Declaration protected float3 centerOfMass Field Value Type Description float3 elements Declaration protected GraphicsBuffer elements Field Value Type Description GraphicsBuffer inertialMoment Declaration protected float3x3 inertialMoment Field Value Type Description float3x3 mu Declaration protected float mu Field Value Type Description Single totalMass Declaration protected float totalMass Field Value Type Description Single Properties CenterOfMass Declaration public Vector3 CenterOfMass { get; } Property Value Type Description Vector3 Elements Declaration public GraphicsBuffer Elements { get; } Property Value Type Description GraphicsBuffer InertialMoment Declaration public float3x3 InertialMoment { get; } Property Value Type Description float3x3 InertialMoment4x4 Declaration public Matrix4x4 InertialMoment4x4 { get; } Property Value Type Description Matrix4x4 Mu Declaration public float Mu { get; } Property Value Type Description Single TotalMass Declaration public float TotalMass { get; } Property Value Type Description Single Methods CalculateCenterOfMass(ParticleElement[]) Declaration protected float3 CalculateCenterOfMass(ParticleElement[] elements) Parameters Type Name Description ParticleElement [] elements Returns Type Description float3 CalculateElementMass(Single, Single) Declaration protected float CalculateElementMass(float radius, float density) Parameters Type Name Description Single radius Single density Returns Type Description Single CalculateInverseInertialMoment(ParticleElement[]) Declaration protected float3x3 CalculateInverseInertialMoment(ParticleElement[] elements) Parameters Type Name Description ParticleElement [] elements Returns Type Description float3x3 CalculateTotalMass(ParticleElement[], Single) Declaration protected float CalculateTotalMass(ParticleElement[] elements, float density) Parameters Type Name Description ParticleElement [] elements Single density Returns Type Description Single Release() Declaration public void Release() SetElements(Single, Single) Declaration protected abstract ParticleElement[] SetElements(float particleRadius, float particleDensity) Parameters Type Name Description Single particleRadius Single particleDensity Returns Type Description ParticleElement []"
  },
  "api/ParticlePhysics.Substance.SimpleSubstance.html": {
    "href": "api/ParticlePhysics.Substance.SimpleSubstance.html",
    "title": "Class SimpleSubstance | Particle Physics",
    "keywords": "Class SimpleSubstance Inheritance Object ParticleSubstance SimpleSubstance Inherited Members ParticleSubstance.elements ParticleSubstance.mu ParticleSubstance.totalMass ParticleSubstance.centerOfMass ParticleSubstance.inertialMoment ParticleSubstance.Elements ParticleSubstance.TotalMass ParticleSubstance.Mu ParticleSubstance.CenterOfMass ParticleSubstance.InertialMoment ParticleSubstance.InertialMoment4x4 ParticleSubstance.Release() ParticleSubstance.CalculateElementMass(Single, Single) ParticleSubstance.CalculateInverseInertialMoment(ParticleElement[]) ParticleSubstance.CalculateTotalMass(ParticleElement[], Single) ParticleSubstance.CalculateCenterOfMass(ParticleElement[]) Namespace : ParticlePhysics.Substance Assembly : cs.temp.dll.dll Syntax public class SimpleSubstance : ParticleSubstance Constructors SimpleSubstance(Single, Single, Single) Declaration public SimpleSubstance(float radius = 0.04F, float density = 2000F, float mu = 0.05F) Parameters Type Name Description Single radius Single density Single mu Methods SetElements(Single, Single) Declaration protected override ParticleElement[] SetElements(float particleRadius, float particleDensity) Parameters Type Name Description Single particleRadius Single particleDensity Returns Type Description ParticleElement [] Overrides ParticleSubstance.SetElements(Single, Single)"
  },
  "api/ParticlePhysics.Substance.TetrahedronSubstance.html": {
    "href": "api/ParticlePhysics.Substance.TetrahedronSubstance.html",
    "title": "Class TetrahedronSubstance | Particle Physics",
    "keywords": "Class TetrahedronSubstance Inheritance Object ParticleSubstance TetrahedronSubstance Inherited Members ParticleSubstance.elements ParticleSubstance.mu ParticleSubstance.totalMass ParticleSubstance.centerOfMass ParticleSubstance.inertialMoment ParticleSubstance.Elements ParticleSubstance.TotalMass ParticleSubstance.Mu ParticleSubstance.CenterOfMass ParticleSubstance.InertialMoment ParticleSubstance.InertialMoment4x4 ParticleSubstance.Release() ParticleSubstance.CalculateElementMass(Single, Single) ParticleSubstance.CalculateInverseInertialMoment(ParticleElement[]) ParticleSubstance.CalculateTotalMass(ParticleElement[], Single) ParticleSubstance.CalculateCenterOfMass(ParticleElement[]) Namespace : ParticlePhysics.Substance Assembly : cs.temp.dll.dll Syntax public class TetrahedronSubstance : ParticleSubstance Constructors TetrahedronSubstance(Single, Single, Single) Declaration public TetrahedronSubstance(float radius = 0.04F, float density = 2000F, float mu = 0.05F) Parameters Type Name Description Single radius Single density Single mu Methods SetElements(Single, Single) Declaration protected override ParticleElement[] SetElements(float particleRadius, float particleDensity) Parameters Type Name Description Single particleRadius Single particleDensity Returns Type Description ParticleElement [] Overrides ParticleSubstance.SetElements(Single, Single)"
  },
  "api/ParticlePhysics.TerrainBuffer.html": {
    "href": "api/ParticlePhysics.TerrainBuffer.html",
    "title": "Class TerrainBuffer | Particle Physics",
    "keywords": "Class TerrainBuffer Inheritance Object TerrainBuffer Namespace : ParticlePhysics Assembly : cs.temp.dll.dll Syntax public class TerrainBuffer Constructors TerrainBuffer(Terrain) Declaration public TerrainBuffer(Terrain terrain) Parameters Type Name Description Terrain terrain Fields buffer Declaration public GraphicsBuffer buffer Field Value Type Description GraphicsBuffer Methods Release() Declaration public void Release()"
  },
  "api/ParticlePhysics.TerrainType.html": {
    "href": "api/ParticlePhysics.TerrainType.html",
    "title": "Struct TerrainType | Particle Physics",
    "keywords": "Struct TerrainType Namespace : ParticlePhysics Assembly : cs.temp.dll.dll Syntax public struct TerrainType Fields height Declaration public float height Field Value Type Description Single normal Declaration public Vector3 normal Field Value Type Description Vector3 Methods GenerateFromTerrain(Terrain) Declaration public static TerrainType[] GenerateFromTerrain(Terrain terrain) Parameters Type Name Description Terrain terrain Returns Type Description TerrainType []"
  },
  "api/ParticlePhysics.Utils.GridSearch-1.html": {
    "href": "api/ParticlePhysics.Utils.GridSearch-1.html",
    "title": "Class GridSearch<T> | Particle Physics",
    "keywords": "Class GridSearch<T> Inheritance Object GridSearchBase GridSearch<T> Inherited Members GridSearchBase.GridSearchCS GridSearchBase.gridBuffer GridSearchBase.gridPingPongBuffer GridSearchBase.gridIndicesBuffer GridSearchBase.sortedObjectsBufferOutput GridSearchBase.numObjects GridSearchBase.threadGroupSize GridSearchBase.SIMULATION_BLOCK_SIZE_FOR_GRID GridSearchBase.totalCellNum GridSearchBase.cellSize GridSearchBase.gridResolution GridSearchBase.TargetGridIndicesBuffer GridSearchBase.CellSize GridSearchBase.GridResolution GridSearchBase.Release() GridSearchBase.GridSort(GraphicsBuffer) GridSearchBase.GridSort(GraphicsBuffer, Transform) Namespace : ParticlePhysics.Utils Assembly : cs.temp.dll.dll Syntax public class GridSearch<T> : GridSearchBase where T : struct Type Parameters Name Description T Constructors GridSearch(Int32, Vector3, Single) GridSearch manage nearest neighbour search task. Declaration public GridSearch(int objNum, Vector3 gridSize, float gridCellSize) Parameters Type Name Description Int32 objNum Vector3 gridSize Single gridCellSize Methods GetCellIndices(UInt32) Declaration public Uint2 GetCellIndices(uint cellNum) Parameters Type Name Description UInt32 cellNum Returns Type Description Uint2 InitializeBuffer(Int32) Declaration protected override void InitializeBuffer(int objectNum) Parameters Type Name Description Int32 objectNum Overrides GridSearchBase.InitializeBuffer(Int32) SetCSVariables() Declaration protected override void SetCSVariables() Overrides GridSearchBase.SetCSVariables()"
  },
  "api/ParticlePhysics.Utils.GridSearchBase.html": {
    "href": "api/ParticlePhysics.Utils.GridSearchBase.html",
    "title": "Class GridSearchBase | Particle Physics",
    "keywords": "Class GridSearchBase Inheritance Object GridSearchBase GridSearch<T> Namespace : ParticlePhysics.Utils Assembly : cs.temp.dll.dll Syntax public abstract class GridSearchBase Constructors GridSearchBase(Int32) Declaration public GridSearchBase(int objNum) Parameters Type Name Description Int32 objNum Fields cellSize Declaration protected float cellSize Field Value Type Description Single gridBuffer Declaration protected GraphicsBuffer gridBuffer Field Value Type Description GraphicsBuffer gridIndicesBuffer Declaration protected GraphicsBuffer gridIndicesBuffer Field Value Type Description GraphicsBuffer gridPingPongBuffer Declaration protected GraphicsBuffer gridPingPongBuffer Field Value Type Description GraphicsBuffer gridResolution Declaration protected Vector3 gridResolution Field Value Type Description Vector3 GridSearchCS Declaration protected ComputeShader GridSearchCS Field Value Type Description ComputeShader numObjects Declaration protected int numObjects Field Value Type Description Int32 SIMULATION_BLOCK_SIZE_FOR_GRID Declaration protected static readonly int SIMULATION_BLOCK_SIZE_FOR_GRID Field Value Type Description Int32 sortedObjectsBufferOutput Declaration protected GraphicsBuffer sortedObjectsBufferOutput Field Value Type Description GraphicsBuffer threadGroupSize Declaration protected int threadGroupSize Field Value Type Description Int32 totalCellNum Declaration protected int totalCellNum Field Value Type Description Int32 Properties CellSize Declaration public float CellSize { get; } Property Value Type Description Single GridResolution Declaration public Vector3 GridResolution { get; } Property Value Type Description Vector3 TargetGridIndicesBuffer Declaration public GraphicsBuffer TargetGridIndicesBuffer { get; } Property Value Type Description GraphicsBuffer Methods GridSort(ref GraphicsBuffer) Declaration public void GridSort(ref GraphicsBuffer objectsBufferInput) Parameters Type Name Description GraphicsBuffer objectsBufferInput GridSort(ref GraphicsBuffer, Transform) Declaration public void GridSort(ref GraphicsBuffer objectsBufferInput, Transform gridTF) Parameters Type Name Description GraphicsBuffer objectsBufferInput Transform gridTF InitializeBuffer(Int32) Declaration protected abstract void InitializeBuffer(int objectNum) Parameters Type Name Description Int32 objectNum Release() Declaration public void Release() SetCSVariables() Declaration protected abstract void SetCSVariables()"
  },
  "api/ParticlePhysics.Utils.html": {
    "href": "api/ParticlePhysics.Utils.html",
    "title": "Namespace ParticlePhysics.Utils | Particle Physics",
    "keywords": "Namespace ParticlePhysics.Utils Classes GridSearch<T> GridSearchBase Structs Uint2"
  },
  "api/ParticlePhysics.Utils.Uint2.html": {
    "href": "api/ParticlePhysics.Utils.Uint2.html",
    "title": "Struct Uint2 | Particle Physics",
    "keywords": "Struct Uint2 Namespace : ParticlePhysics.Utils Assembly : cs.temp.dll.dll Syntax public struct Uint2 Fields x Declaration public uint x Field Value Type Description UInt32 y Declaration public uint y Field Value Type Description UInt32"
  },
  "index.html": {
    "href": "index.html",
    "title": "ParticlePhysics | Particle Physics",
    "keywords": "ParticlePhysics ParticlePhysics simulate the dynamics of sand-like particles in Unity. This is an implementation of the research paper \"Particle-Based Simulation of Granular Materials\" . DEMO Requirement Package com.unity.mathematics: 1.2.6 com.unity.visualeffectgraph: 12.1.0 Installation Only Package Please install the .unitypackage distributed from the release page into your project. With Example Clone this repository, and copy example files(./Assets/Examples) into your project. Note This project is under development. I'm not responsible for any damages resulting from the use of this software. Author Tomohiro Kuwano E-mail：ku_engineer_wa@yahoo.com License Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
  },
  "manual/coniunctis.html": {
    "href": "manual/coniunctis.html",
    "title": "Coniunctis nec qui et lanient monticolae vitae | Particle Physics",
    "keywords": "Coniunctis nec qui et lanient monticolae vitae Opem ille Lorem markdownum cavis exululat inutile. Illi quem caeli, vola patruo difficili Iuppiter Patraeque, est ardebant ingeniis Troica intus Amore tibi mirantem superfusis, multum. Ut Achilles Et sitim Tibi modo ait temptant crinita daret Pariter in removi offensasque Lenaeo damno terra Phoebes ut damnosa classis ignes templo; tua ulla capillos ultima. Videre percusso plectro templa fuit diva minimum debere, quid nomen Philomela animis. Verbis istis flagrat vulnera inpediique ignes. Gravi filo obvius arte Amphionis Panes emisitque iubet. Latona te timens Latentia ante, eundem meritorum sunto ! Elige in timuit templa ferrea, qui arma ligati stagnum turbant. Fraternaque aeternus, dedisse, naufragus corripiens ranas Amathunta et quod laetior culpa nec semper scorpius fuit vicem corpora ardere. Fallit in artus primordia, fratres per aliis , ipsi manu Asiae quod marmorea . mountain(googleVga, pngIphone); var radcabBitrate = dnsCronRecursion; gui(2); ipImageAix += vle(drm_cisc, horizontal + computer_key); jre(vaporware_adc_multi); Lumina ut tamen praesentia vidistis nymphae auroque Bromumque in portant furorem. Visa init resurgere praevitiat canibus et, dedignata turea, ilia. Pisenore mensura insula aere nec per o gladium causa: Alcidae. Veris sentes pallet, alta melius nostra amborum probant, deam. Iuventae dedimus nitidaque hunc traxisse sermonibus pectine flecti an pateres, hac ore gelidis foret semper. Sithon pelle. Bracchia Hippason videntur fateri hosti: palpitat animo est reliquit anne nam confusaque. Interea rex altis munera quem quae quoque rorant, rauco albescere scopulo moriensque parvo, pectus illa, quadrupedes. Notavit haec. Vertit pars quem Euryte casu usta iterum! Ablatum pectus corripiunt neu humus tamquam; ducens stellarum amore. Pulsisque latet, ad tamen victor fulva Tirynthius posco; qui inque in poena quidem enses !"
  },
  "manual/etiam.html": {
    "href": "manual/etiam.html",
    "title": "Etiam nantemque exul | Particle Physics",
    "keywords": "Etiam nantemque exul Cum tulit Lorem markdownum quos stimulosque altos . Putat nubes molle Troiae vero dea; nostraque plurima . Vos de mihi, credidit: salibus et iacuit, volvitur sunt unda fronti deriguisse refert . Sumpsisse viso Nubila nomine. Purpura se o et causa parva ripas, adsonat saevaque; quid modo ambo et venere voveo. Sine et esse, illa tempore, sive tibi roseo, ministerio altos. Trepident medicamine, primasque cum et peregit dapibusque quoslibet hominis quoque insula. Tepentibus ut Cecropios ab turba, est auro ferventi aliter duratos feres differtis Ausoniis potes, non noctis Laertaque iuvenes. Caelumque vestigia Et promissa fila sentiet leges; Phrygiae et levatus ferire? Salutifer coniugis fierent ante fecissent post vultumque ultima, per radios currere; tandem. Fuerat qua, ne foedera reformatus nunc diu dea audet nonne. Ut utinam mitia tenuerunt movent spectans Mavortis nulla ite, somnos exsiccata dixit Aeetias. Binas Trinacriam album ex ipse. Quoque una utraque tardius placetque gerere; mariti sed dare ludunt memorante Delphice corpora. Caret quantum intellegat venis gaudent eurus. Et suos crista; has et ferarum quid audit omine; mea cum praemia quae duris, suspicor. Adflati qui Spiro conata supprimit diemque; ora oblitus ensem alti non quo lacrimis ferunt, ageret Cebrenida rutilis delendaque? Terras lata modus: nec fas, misi utque adpositis Iunonis. Fide vidit, ferox Schoeneia mundi, voce, tellus pariterque pedum, sic Celadon securior corpora partesque posito. Potest faxo unda pendulaque ille rostro, haesit pars: formidine captat, viseret simulaverat! Sequi est peragit flumineae pallent simulatas formae avulsa, imagine undis; formam. Et nec sed adeunt, huic aequa et ignes nec, medere terram. Move ipsum abnuat retemptat retinebat duabus diu Iovi est pluma. Tecum non deducit Pelops Inachus: arcet aliquemque, regia telo. Tollens altore nec semel qui voce Palatinae Apertis et dei duo inquit ; luna secundo, fervida terret. In haec dextra septima Tydides tibi: congelat hospes nativum radice tegumenque membris Hesperio ne Libys, est vocabula siqua. Dumque stet mulces , ut fontem dea atricolor, est pronos, clarissimus poterat cum intrare sidere templi. cut_metadata(whitelistSequenceUnit.thick.of_bezel_cdma( address_suffix_troubleshooting), sram_trojan(4, hdmi_network - 1)); flash.apache -= web_gps_plug; if (offline.dac_bridge(scrollEbookRom, parameter.internal_target_superscalar(2)) < qwerty + 2 - ipvCgiContextual) { certificateIdeAsp = overclocking + app; supplyCard = siteRaster; } Sagitta curvum quoque petisti opibusque proximitas in, illa vestrum, mihi domum nescia flexit sacra in. Magni vive sim crescente causam saxo voluit, mens, quod. Tela ter ulterius similis illos nato refugit ait verbaque nec fatigatum penates iaculatricemque cecidit pinnas, cum. Misso contigit caelo dedissent lumina; nympha ad vobis occidat, malo sacra utrumque cunctos Diomedeos addita. Virgineus autumnos, ait mitissima curru: fuit sed fessi se habebat hactenus Ultor; meus."
  }
}