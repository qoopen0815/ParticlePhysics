name: Release Unity Package

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version: eg. v1.0.2"
        required: true

env:
  FILE_NAME: "ParticleSimulator"
  BUILD_METHOD: "PackageExporter.Export"

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
      # Cache
      - name: Cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      # Build
      - name: Build package
        id: build
        uses: game-ci/unity-builder@v2
        env:
         UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          buildName: ${{ env.FILE_NAME }}.unitypackage
          targetPlatform: StandaloneLinux64
          buildMethod: ${{ env.BUILD_METHOD }}
          versioning: None
      # Check .meta
      - name: Check all .meta is commited
        run: |
          if git ls-files --others --exclude-standard -t | grep --regexp='[.]meta$'; then
            echo "Detected .meta file generated. Do you forgot commit a .meta file?"
            exit 1
          else
            echo "Great, all .meta files are commited."
          fi
        working-directory: Assets
      # Create Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: ${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
      # Upload Assets
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./${{ env.FILE_NAME }}.unitypackage
          asset_name: ${{ env.FILE_NAME }}-${{ github.event.inputs.version }}.unitypackage
          asset_content_type: application/zip
